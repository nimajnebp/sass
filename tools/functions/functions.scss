//
// @File
// Functions.
//

@function transition-props($props...) {
  $duration: 0.25s;
  $timing-function: ease-in-out;
  $transitions: ();
  @each $e in $props {
    $e: $e $duration $timing-function;
    $transitions: append($transitions, $e, comma);
  }
  @return $transitions;
}

@function spacing($space) {
  @return map_get($spacers, $space);
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

@function get-asset($asset, $path: $default-assets-path, ) {
  @return url("#{$path}#{$asset}");
}

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function escape-svg($string) {
  $escaped-characters: (("<","%3c"), (">","%3e"), ("#","%23"));
  @if str-index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      $string: str-replace($string, $char, $encoded);
    }
  }

  @return $string;
}
